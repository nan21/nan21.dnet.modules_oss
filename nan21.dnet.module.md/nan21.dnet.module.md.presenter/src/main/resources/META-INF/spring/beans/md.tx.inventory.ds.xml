<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- ==================== InvTransactionType ==================== -->
	
	<bean id="InvTransactionTypeDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.md.tx.inventory.ds.model.InvTransactionTypeDs"/>
		<property name="entityClass" value="net.nan21.dnet.module.md.tx.inventory.domain.entity.InvTransactionType"/>
		<property name="converterClass" value="net.nan21.dnet.module.md.tx.inventory.ds.converter.InvTransactionTypeDsConv" />
	</bean>
	
	<!-- ==================== InvTransactionTypeLov ==================== -->
	
	<bean id="InvTransactionTypeLovDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.md.tx.inventory.ds.model.InvTransactionTypeLovDs"/>
		<property name="entityClass" value="net.nan21.dnet.module.md.tx.inventory.domain.entity.InvTransactionType"/>
		<property name="readOnly" value="true" />
	</bean>
	
	<!-- ==================== InvTransaction ==================== -->
	
	<bean id="InvTransactionDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.md.tx.inventory.ds.model.InvTransactionDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.md.tx.inventory.ds.model.InvTransactionDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.md.tx.inventory.domain.entity.InvTransaction"/>
		<property name="converterClass" value="net.nan21.dnet.module.md.tx.inventory.ds.converter.InvTransactionDsConv" />
	</bean>
	
	<!-- ==================== InvTransactionLine ==================== -->
	
	<bean id="InvTransactionLineDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.md.tx.inventory.ds.model.InvTransactionLineDs"/>
		<property name="entityClass" value="net.nan21.dnet.module.md.tx.inventory.domain.entity.InvTransactionLine"/>
		<property name="converterClass" value="net.nan21.dnet.module.md.tx.inventory.ds.converter.InvTransactionLineDsConv" />
	</bean>
	
	<!-- ==================== InvTransfer ==================== -->
	
	<bean id="InvTransferDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.md.tx.inventory.ds.model.InvTransferDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.md.tx.inventory.ds.model.InvTransferDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.md.tx.inventory.domain.entity.InvTransfer"/>
		<property name="converterClass" value="net.nan21.dnet.module.md.tx.inventory.ds.converter.InvTransferDsConv" />
		<property name="rpcData" >
			<map>
				<entry key="confirm">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.md._presenterdelegates.tx.inventory.InvTransferPD"/>
						<constructor-arg name="methodName" value="confirm" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="unConfirm">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.md._presenterdelegates.tx.inventory.InvTransferPD"/>
						<constructor-arg name="methodName" value="unConfirm" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="post">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.md._presenterdelegates.tx.inventory.InvTransferPD"/>
						<constructor-arg name="methodName" value="post" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- ==================== InvOperation ==================== -->
	
	<bean id="InvOperationDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.md.tx.inventory.ds.model.InvOperationDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.md.tx.inventory.ds.model.InvOperationDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.md.tx.inventory.domain.entity.InvOperation"/>
		<property name="readOnly" value="true" />
	</bean>
	
	<!-- ==================== InvBalance ==================== -->
	
	<bean id="InvBalanceDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.md.tx.inventory.ds.model.InvBalanceDs"/>
		<property name="entityClass" value="net.nan21.dnet.module.md.tx.inventory.domain.entity.InvBalance"/>
		<property name="readOnly" value="true" />
	</bean>
</beans>
