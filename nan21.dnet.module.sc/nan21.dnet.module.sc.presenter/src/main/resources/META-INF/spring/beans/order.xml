<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- ==================== PurchaseOrder ==================== -->
	
	<bean id="PurchaseOrderDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.order.ds.model.PurchaseOrderDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.sc.order.ds.model.PurchaseOrderDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.order.domain.entity.PurchaseOrder"/>
		<property name="paramClass" value="net.nan21.dnet.module.sc.order.ds.model.PurchaseOrderDsParam"/>
		<property name="rpcData" >
			<map>
				<entry key="confirm">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.order.PurchaseOrderPD"/>
						<constructor-arg name="methodName" value="confirm" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="unConfirm">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.order.PurchaseOrderPD"/>
						<constructor-arg name="methodName" value="unConfirm" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="copyLines">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.order.PurchaseOrderPD"/>
						<constructor-arg name="methodName" value="copyLines" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- ==================== PurchaseOrderLov ==================== -->
	
	<bean id="PurchaseOrderLovDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.order.ds.model.PurchaseOrderLovDs"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.order.domain.entity.PurchaseOrder"/>
		<property name="readOnly" value="true" />
	</bean>
	
	<!-- ==================== PurchaseOrderItem ==================== -->
	
	<bean id="PurchaseOrderItemDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.order.ds.model.PurchaseOrderItemDs"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.order.domain.entity.PurchaseOrderItem"/>
		<property name="rpcData" >
			<map>
				<entry key="onProductChange">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.order.PurchaseOrderItemPD"/>
						<constructor-arg name="methodName" value="onProductChange" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- ==================== PurchaseOrderItemOverview ==================== -->
	
	<bean id="PurchaseOrderItemOverviewDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.order.ds.model.PurchaseOrderItemOverviewDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.sc.order.ds.model.PurchaseOrderItemOverviewDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.order.domain.entity.PurchaseOrderItem"/>
		<property name="readOnly" value="true" />
	</bean>
	
	<!-- ==================== PurchaseOrderItemTax ==================== -->
	
	<bean id="PurchaseOrderItemTaxDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.order.ds.model.PurchaseOrderItemTaxDs"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.order.domain.entity.PurchaseOrderItemTax"/>
		<property name="readOnly" value="true" />
	</bean>
	
	<!-- ==================== PurchaseOrderTax ==================== -->
	
	<bean id="PurchaseOrderTaxDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.order.ds.model.PurchaseOrderTaxDs"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.order.domain.entity.PurchaseOrderTax"/>
		<property name="readOnly" value="true" />
	</bean>
	
	<!-- ==================== PurchaseInventoryTransaction ==================== -->
	
	<bean id="PurchaseInventoryTransactionDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.order.ds.model.PurchaseInventoryTransactionDs"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.order.domain.entity.PurchaseInventoryTransaction"/>
	</bean>
	
	<!-- ==================== PurchaseReception ==================== -->
	
	<bean id="PurchaseReceptionDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.order.ds.model.PurchaseReceptionDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.sc.order.ds.model.PurchaseReceptionDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.order.domain.entity.PurchaseInventoryTransaction"/>
		<property name="rpcData" >
			<map>
				<entry key="confirm">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.order.PurchaseReceptionPD"/>
						<constructor-arg name="methodName" value="confirm" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="unConfirm">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.order.PurchaseReceptionPD"/>
						<constructor-arg name="methodName" value="unConfirm" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="post">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.order.PurchaseReceptionPD"/>
						<constructor-arg name="methodName" value="post" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="unPost">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.order.PurchaseReceptionPD"/>
						<constructor-arg name="methodName" value="unPost" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
</beans>
