<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- ==================== PurchaseInvoice ==================== -->
	
	<bean id="PurchaseInvoiceDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PurchaseInvoiceDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.sc.invoice.ds.filter.PurchaseInvoiceDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.invoice.domain.entity.PurchaseInvoice"/>
		<property name="converterClass" value="net.nan21.dnet.module.sc.invoice.ds.converter.PurchaseInvoiceDsConv" />
		<property name="rpcData" >
			<map>
				<entry key="confirm">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.invoice.PurchaseInvoicePD"/>
						<constructor-arg name="methodName" value="confirm" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="unConfirm">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.invoice.PurchaseInvoicePD"/>
						<constructor-arg name="methodName" value="unConfirm" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="post">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.invoice.PurchaseInvoicePD"/>
						<constructor-arg name="methodName" value="post" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="unPost">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.invoice.PurchaseInvoicePD"/>
						<constructor-arg name="methodName" value="unPost" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="PurchaseInvoice" />
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PurchaseInvoiceDs" />
		<property name="serviceMethods" >
			<list>
				<value type="java.lang.String">confirm</value>
				<value type="java.lang.String">unConfirm</value>
				<value type="java.lang.String">post</value>
				<value type="java.lang.String">unPost</value>
			</list>
		</property>
	</bean>
	
	<!-- ==================== PurchaseInvoiceItem ==================== -->
	
	<bean id="PurchaseInvoiceItemDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PurchaseInvoiceItemDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.sc.invoice.ds.filter.PurchaseInvoiceItemDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.invoice.domain.entity.PurchaseInvoiceItem"/>
		<property name="converterClass" value="net.nan21.dnet.module.sc.invoice.ds.converter.PurchaseInvoiceItemDsConv" />
		<property name="rpcData" >
			<map>
				<entry key="onProductChange">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.invoice.PurchaseInvoiceItemPD"/>
						<constructor-arg name="methodName" value="onProductChange" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="PurchaseInvoiceItem" />
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PurchaseInvoiceItemDs" />
		<property name="serviceMethods" >
			<list>
				<value type="java.lang.String">onProductChange</value>
			</list>
		</property>
	</bean>
	
	<!-- ==================== PurchaseInvoiceItemOverview ==================== -->
	
	<bean id="PurchaseInvoiceItemOverviewDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PurchaseInvoiceItemOverviewDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.sc.invoice.ds.filter.PurchaseInvoiceItemOverviewDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.invoice.domain.entity.PurchaseInvoiceItem"/>
		<property name="readOnly" value="true" />
	</bean>
	
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="PurchaseInvoiceItemOverview" />
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PurchaseInvoiceItemOverviewDs" />
	</bean>
	
	<!-- ==================== PurchaseInvoiceItemTax ==================== -->
	
	<bean id="PurchaseInvoiceItemTaxDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PurchaseInvoiceItemTaxDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.sc.invoice.ds.filter.PurchaseInvoiceItemTaxDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.invoice.domain.entity.PurchaseInvoiceItemTax"/>
		<property name="readOnly" value="true" />
	</bean>
	
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="PurchaseInvoiceItemTax" />
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PurchaseInvoiceItemTaxDs" />
	</bean>
	
	<!-- ==================== PurchaseInvoiceTax ==================== -->
	
	<bean id="PurchaseInvoiceTaxDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PurchaseInvoiceTaxDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.sc.invoice.ds.filter.PurchaseInvoiceTaxDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.invoice.domain.entity.PurchaseInvoiceTax"/>
		<property name="readOnly" value="true" />
	</bean>
	
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="PurchaseInvoiceTax" />
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PurchaseInvoiceTaxDs" />
	</bean>
	
	<!-- ==================== PaymentOut ==================== -->
	
	<bean id="PaymentOutDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PaymentOutDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.sc.invoice.ds.filter.PaymentOutDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.invoice.domain.entity.PaymentOut"/>
		<property name="converterClass" value="net.nan21.dnet.module.sc.invoice.ds.converter.PaymentOutDsConv" />
		<property name="rpcData" >
			<map>
				<entry key="confirm">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.invoice.PaymentOutPD"/>
						<constructor-arg name="methodName" value="confirm" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="unConfirm">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.invoice.PaymentOutPD"/>
						<constructor-arg name="methodName" value="unConfirm" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="post">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.invoice.PaymentOutPD"/>
						<constructor-arg name="methodName" value="post" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
				<entry key="unPost">
					<bean class="net.nan21.dnet.core.presenter.model.RpcDefinition">
						<constructor-arg name="delegateClass" value="net.nan21.dnet.module.sc._presenterdelegates.invoice.PaymentOutPD"/>
						<constructor-arg name="methodName" value="unPost" />
						<constructor-arg name="reloadFromEntity" value="true" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="PaymentOut" />
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PaymentOutDs" />
		<property name="serviceMethods" >
			<list>
				<value type="java.lang.String">confirm</value>
				<value type="java.lang.String">unConfirm</value>
				<value type="java.lang.String">post</value>
				<value type="java.lang.String">unPost</value>
			</list>
		</property>
	</bean>
	
	<!-- ==================== PaymentOutAmount ==================== -->
	
	<bean id="PaymentOutAmountDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PaymentOutAmountDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.sc.invoice.ds.filter.PaymentOutAmountDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.invoice.domain.entity.PaymentOutAmount"/>
		<property name="converterClass" value="net.nan21.dnet.module.sc.invoice.ds.converter.PaymentOutAmountDsConv" />
	</bean>
	
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="PaymentOutAmount" />
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PaymentOutAmountDs" />
	</bean>
	
	<!-- ==================== PurchaseTxAmount ==================== -->
	
	<bean id="PurchaseTxAmountDsService" scope="singleton" lazy-init="true"
			class="net.nan21.dnet.core.presenter.service.ds.DefaultEntityDsService">
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PurchaseTxAmountDs"/>
		<property name="filterClass" value="net.nan21.dnet.module.sc.invoice.ds.filter.PurchaseTxAmountDsFilter"/>
		<property name="entityClass" value="net.nan21.dnet.module.sc.invoice.domain.entity.PurchaseTxAmount"/>
		<property name="converterClass" value="net.nan21.dnet.module.sc.invoice.ds.converter.PurchaseTxAmountDsConv" />
	</bean>
	
	<bean class="net.nan21.dnet.core.presenter.model.DsDefinition" >
		<property name="name" value="PurchaseTxAmount" />
		<property name="modelClass" value="net.nan21.dnet.module.sc.invoice.ds.model.PurchaseTxAmountDs" />
	</bean>
</beans>
